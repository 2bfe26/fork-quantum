{"version":3,"file":"main.bad66d6c7bce2ff71c21.bundle.js","sources":["webpack:///./components/RadioGroup/Radio.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Colors from '../Colors';\nimport Label from '../shared/Label';\n\nconst RadioMark = styled.span`\n  background-color: ${Colors.WHITE};\n  border: 1.5px solid ${Colors.BLACK[400]};\n  border-radius: 50%;\n  box-sizing: border-box;\n  display: inline-block;\n  height: 16px;\n  margin-right: 5px;\n  position: relative;\n  top: 4px;\n  width: 16px;\n\n  :after {\n    background-color: ${Colors.BLUE[500]};\n    border-radius: 50%;\n    content: '';\n    display: none;\n    height: 50%;\n    left: 25%;\n    position: absolute;\n    top: 25%;\n    width: 50%;\n  }\n`;\n\nconst StyledRadio = styled.input.attrs({\n  type: 'radio',\n})`\n  border: 0;\n  height: 0;\n  margin: 0;\n  opacity: 0;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 0;\n`;\n\nconst RadioLabel = styled(Label)`\n  cursor: pointer;\n  user-select: none;\n\n  ${StyledRadio} {\n    :checked {\n      ~ ${RadioMark} {\n        border-color: ${Colors.BLUE[500]};\n        :after {\n          background-color: ${Colors.BLUE[500]};\n          display: block;\n        }\n      }\n    }\n\n    :focus {\n      ~ ${RadioMark} {\n        border-color: ${Colors.BLUE[500]};\n        box-shadow: 0 2px 6px 0 ${Colors.BLUE[50]};\n      }\n    }\n  }\n\n  :hover,\n  :focus {\n    ${RadioMark} {\n      border-color: ${Colors.BLUE[500]};\n      box-shadow: 0 2px 6px 0 ${Colors.BLUE[50]};\n    }\n  }\n\n  ${({ error }) =>\n    error &&\n    `\n    ${StyledRadio} {\n      :checked {\n        ~ ${RadioMark} {\n          border-color: ${Colors.ERROR[500]};\n          :after {\n            background-color: ${Colors.ERROR[500]};\n            display: block;\n          }\n        }\n      }\n      :focus {\n        ~ ${RadioMark} {\n          border-color: ${Colors.ERROR[500]};\n          box-shadow: 0 2px 6px 0 ${Colors.ERROR[500]};\n        }\n      }\n    }\n\n    ${RadioMark} {\n      border-color: ${Colors.ERROR[500]};\n    }\n\n    :hover,\n    :focus {\n      ${RadioMark} {\n        border-color: ${Colors.ERROR[500]};\n        box-shadow: 0 2px 6px 0 ${Colors.ERROR[500]};\n      }\n    }\n    `}\n\n\n\n  ${({ disabled }) =>\n    disabled &&\n    `\n    color: ${Colors.BLACK[400]};\n\n    :hover {\n      cursor: not-allowed;\n    }\n\n    ${StyledRadio} {\n      :disabled {\n        ~ ${RadioMark} {\n          background-color: ${Colors.BLACK[200]};\n        }\n      }\n\n      :checked {\n        ~ ${RadioMark} {\n          border-color: ${Colors.ERROR[500]};\n          :after {\n            background-color: ${Colors.ERROR[500]};\n            display: block;\n          }\n        }\n      }\n\n      :checked:disabled {\n        background-color: ${Colors.BLACK[400]};\n        border-color: ${Colors.BLACK[400]};\n        ~ ${RadioMark}:after {\n          background-color: ${Colors.BLACK[400]};\n        }\n      }\n\n      :focus {\n        ~ ${RadioMark} {\n          border-color: ${Colors.BLACK[400]};\n          box-shadow: none;\n        }\n      }\n    }\n\n    :hover, :focus {\n      ${RadioMark} {\n        border-color: ${Colors.BLACK[400]};\n        box-shadow: none;\n      }\n    }\n  `}\n\n  ${StyledRadio}:checked:disabled ~ ${RadioMark} {\n    background-color: ${Colors.BLACK[400]};\n    border-color: ${Colors.BLACK[400]};\n    box-shadow: inset 0 0 0 3.5px ${Colors.WHITE};\n  }\n`;\n\nconst Radio = ({\n  children,\n  label,\n  error,\n  disabled,\n  onChange,\n  value,\n  ...rest\n}) => (\n  <RadioLabel error={error} disabled={disabled}>\n    <StyledRadio\n      disabled={disabled}\n      onChange={e => onChange({ value, label }, e)}\n      {...rest}\n    />\n    <RadioMark />\n    {children || label}\n  </RadioLabel>\n);\n\nRadio.create = radio => <Radio {...radio} />;\n\nRadio.displayName = 'RadioGroup.Radio';\n\nRadio.defaultProps = {\n  disabled: false,\n  error: false,\n  children: undefined,\n  label: undefined,\n  onChange: () => {},\n};\n\nRadio.propTypes = {\n  disabled: PropTypes.bool,\n  error: PropTypes.bool,\n  children: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n};\n\nexport default Radio;\n"],"mappings":"AAMA","sourceRoot":""}