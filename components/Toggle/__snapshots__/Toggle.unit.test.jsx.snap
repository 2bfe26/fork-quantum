// Jest Snapshot v1, https://goo.gl/fbAQLP

<<<<<<< HEAD
exports[`Input component  should match the snapshot 1`] = `
.c0 {
  position: relative;
  margin-bottom: 20px;
  min-width: 250px;
  width: 100%;
}

.c2 {
  display: none;
}

.c1 {
  display: block;
  margin-bottom: 5px;
  font-size: 16px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  line-height: 1.5;
  cursor: pointer;
  display: inline-block;
  padding-right: 54px;
  position: relative;
}

.c1:before,
.c1:after {
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
}

.c1:before {
  background: #b2bec5;
  border-radius: 10px;
  content: '';
  height: 16px;
  position: absolute;
  right: 0;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  top: 50%;
  width: 42px;
}

.c1:after {
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  border: 1px solid #93a3ad;
  border-radius: 50%;
  box-sizing: border-box;
  content: '';
  height: 24px;
  position: absolute;
  right: 20px;
  top: 50%;
  width: 24px;
  background-color: #FFFFFF;
}

.c1:hover:after {
  background-color: #03a9f4;
  border: 1px solid transparent;
=======
exports[`<Toggle />  Snapshots should match snapshot with checked prop 1`] = `
.c0 {
  display: inline-block;
  position: relative;
  pointer-events: none;
}

.c3 {
  cursor: pointer;
  display: inline-block;
  height: 24px;
  padding-left: 42px;
}

.c3:before {
  background-color: #999999;
  border-radius: 16px;
  content: '';
  height: 24px;
  position: absolute;
  left: 0;
  top: 0;
  width: 42px;
  -webkit-transition: background-color 0.2s ease-in-out,color 0.2s ease-in-out,-webkit-transform 0.2s ease-in-out;
  -webkit-transition: background-color 0.2s ease-in-out,color 0.2s ease-in-out,transform 0.2s ease-in-out;
  transition: background-color 0.2s ease-in-out,color 0.2s ease-in-out,transform 0.2s ease-in-out;
}

.c3 .c4,
.c3 .c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f2f2f2;
  border-radius: 50%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #999999;
  font-size: 12px;
  height: 20px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: absolute;
  left: 2px;
  top: 2px;
  visibility: hidden;
  width: 20px;
  -webkit-transition: -webkit-transform 0.2s ease-in-out;
  -webkit-transition: transform 0.2s ease-in-out;
  transition: transform 0.2s ease-in-out;
}

.c3 .c4 {
  visibility: visible;
}

.c1 {
  cursor: pointer;
  height: 24px;
  left: 0;
  opacity: 0;
  position: absolute;
  pointer-events: initial;
  width: 100%;
}

.c1:focus + .c2:before {
  box-shadow: 0 2px 6px 0 rgba(19,85,208,0.5);
}

.c1:hover + .c2:before {
  background-color: #4c4c4c;
}

.c1:checked + .c2 .c4 {
  visibility: hidden;
  -webkit-transform: translateX(18px);
  -ms-transform: translateX(18px);
  transform: translateX(18px);
}

.c1:checked + .c2 .c5 {
  visibility: visible;
}

.c1:checked + .c2:before {
  background-color: #1355d0;
}

.c1:checked:hover + .c2:before {
  background-color: #002f7b;
}

.c1:checked + .c2 .c5 {
  background-color: #e5edfc;
  color: #1355d0;
  -webkit-transform: translateX(18px);
  -ms-transform: translateX(18px);
  transform: translateX(18px);
}

<div
  className="c0"
>
  <input
    checked={true}
    className="c1"
    role="switch"
    type="checkbox"
  />
  <div
    className="c2 c3"
  >
    <span
      aria-hidden="true"
      className="material-icons MuiIcon-root-1 c4 "
      style={
        Object {
          "color": "",
        }
      }
    >
      close
    </span>
    <span
      aria-hidden="true"
      className="material-icons MuiIcon-root-1 c5 "
      style={
        Object {
          "color": "",
        }
      }
    >
      check
    </span>
  </div>
</div>
`;

exports[`<Toggle />  Snapshots should match snapshot without props 1`] = `
.c0 {
  display: inline-block;
  position: relative;
  pointer-events: none;
}

.c3 {
  cursor: pointer;
  display: inline-block;
  height: 24px;
  padding-left: 42px;
}

.c3:before {
  background-color: #999999;
  border-radius: 16px;
  content: '';
  height: 24px;
  position: absolute;
  left: 0;
  top: 0;
  width: 42px;
  -webkit-transition: background-color 0.2s ease-in-out,color 0.2s ease-in-out,-webkit-transform 0.2s ease-in-out;
  -webkit-transition: background-color 0.2s ease-in-out,color 0.2s ease-in-out,transform 0.2s ease-in-out;
  transition: background-color 0.2s ease-in-out,color 0.2s ease-in-out,transform 0.2s ease-in-out;
}

.c3 .c4,
.c3 .c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #f2f2f2;
  border-radius: 50%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: #999999;
  font-size: 12px;
  height: 20px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: absolute;
  left: 2px;
  top: 2px;
  visibility: hidden;
  width: 20px;
  -webkit-transition: -webkit-transform 0.2s ease-in-out;
  -webkit-transition: transform 0.2s ease-in-out;
  transition: transform 0.2s ease-in-out;
}

.c3 .c4 {
  visibility: visible;
}

.c1 {
  cursor: pointer;
  height: 24px;
  left: 0;
  opacity: 0;
  position: absolute;
  pointer-events: initial;
  width: 100%;
}

.c1:focus + .c2:before {
  box-shadow: 0 2px 6px 0 rgba(19,85,208,0.5);
}

.c1:hover + .c2:before {
  background-color: #4c4c4c;
}

.c1:checked + .c2 .c4 {
  visibility: hidden;
  -webkit-transform: translateX(18px);
  -ms-transform: translateX(18px);
  transform: translateX(18px);
}

.c1:checked + .c2 .c5 {
  visibility: visible;
}

.c1:checked + .c2:before {
  background-color: #1355d0;
}

.c1:checked:hover + .c2:before {
  background-color: #002f7b;
}

.c1:checked + .c2 .c5 {
  background-color: #e5edfc;
  color: #1355d0;
  -webkit-transform: translateX(18px);
  -ms-transform: translateX(18px);
  transform: translateX(18px);
>>>>>>> origin/master
}

<div
  className="c0"
>
<<<<<<< HEAD
  <label
    checked={false}
    className="c1"
    disabled={false}
  >
    <input
      checked={false}
      className="c2"
      disabled={false}
      id=""
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      type="checkbox"
    />
    
  </label>
=======
  <input
    checked={null}
    className="c1"
    role="switch"
    type="checkbox"
  />
  <div
    className="c2 c3"
  >
    <span
      aria-hidden="true"
      className="material-icons MuiIcon-root-1 c4 "
      style={
        Object {
          "color": "",
        }
      }
    >
      close
    </span>
    <span
      aria-hidden="true"
      className="material-icons MuiIcon-root-1 c5 "
      style={
        Object {
          "color": "",
        }
      }
    >
      check
    </span>
  </div>
>>>>>>> origin/master
</div>
`;
